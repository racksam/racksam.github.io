<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on Racksam</title>
    <link>http://www.racksam.com/categories/php/</link>
    <description>Recent content in PHP on Racksam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Sat, 05 Apr 2014 17:23:26 +0000</lastBuildDate>
    
	<atom:link href="http://www.racksam.com/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx上安装phpMyAdmin</title>
      <link>http://www.racksam.com/2014/04/05/how-to-install-phpmyadmin-on-nginx/</link>
      <pubDate>Sat, 05 Apr 2014 17:23:26 +0000</pubDate>
      
      <guid>http://www.racksam.com/2014/04/05/how-to-install-phpmyadmin-on-nginx/</guid>
      <description>&lt;p&gt;前提：首先要完成安装 &lt;a href=&#34;http://www.racksam.com/2014/04/04/setting-nginx-php-fpm-mysql/&#34;&gt;nginx+php+php-fpm+mysql&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;一-准备工作&#34;&gt;一、 准备工作：&lt;/h2&gt;

&lt;h3 id=&#34;1-如果mysql的root账号为空-需要设置root密码&#34;&gt;1. 如果mysql的root账号为空，需要设置root密码&lt;/h3&gt;

&lt;p&gt;CentOS下默认安装的mysql服务器，里面的root账号默认密码为空，首先为root设置一个密码&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#mysqladmin -u root password yourpassword&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注： 虽然通过一些特殊配置，可以使phpmyadmin允许空密码登录，但是不推荐这样做，尤其是公网的服务器。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-设置php-ini正确配置-session-save-path&#34;&gt;2. 设置php.ini正确配置&lt;code&gt;session.save_path&lt;/code&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先检查php.ini配置文件&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#grep session.save_path /etc/php.ini&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果不存在以下设置，增加该配置。如果被注释了话，去掉注释
session.save_path = “/var/lib/php/session”&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看该目录是否存在：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#ls /var/lib/php/session&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果不存在，则手工创建&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#mkdir /var/lib/php/session&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;修改目录属主为nginx&lt;/p&gt;

&lt;p&gt;&lt;code&gt;chown nginx:nginx session/ -R&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;重启启动php-fpm&lt;/p&gt;

&lt;p&gt;&lt;code&gt;service php-fpm restart&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php访问gmail imap邮箱 (完美显示中文目录名与邮件)</title>
      <link>http://www.racksam.com/2014/01/01/php-fetch-gmail/</link>
      <pubDate>Wed, 01 Jan 2014 10:59:22 +0000</pubDate>
      
      <guid>http://www.racksam.com/2014/01/01/php-fetch-gmail/</guid>
      <description>&lt;p&gt;根据官方文档以及一些网友的分享，整理编写了IMAP方式访问Gmail邮箱的代码。经过反复测试和调整，中文目录名称显示的问题也终于得到了解决。 &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>根据客户端IP地址识别ISP</title>
      <link>http://www.racksam.com/2013/09/02/getting-client-isp-with-php/</link>
      <pubDate>Mon, 02 Sep 2013 10:39:07 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/09/02/getting-client-isp-with-php/</guid>
      <description>&lt;p&gt;PHP服务器端的程序，只要查询出客户端IP地址归属地以后，就可以在此基础上加以灵活应用。例如，针对来自不同的ISP的访问，返回不同的网页内容。或者根据用户所在的城市，跳转到该城市的地方网站。&lt;/p&gt;

&lt;p&gt;这里是一个简单的区分不同的ISP的小程序。节选部分代码：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序查询IP地址归属地的方法</title>
      <link>http://www.racksam.com/2013/09/01/getting-ip-location-with-php/</link>
      <pubDate>Sun, 01 Sep 2013 10:39:07 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/09/01/getting-ip-location-with-php/</guid>
      <description>&lt;p&gt;程序中查询一个IP地址的归属地信息，方法有很多种。概括起来有两类：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;调用某些网站提供的web api接口&lt;/p&gt;

&lt;p&gt;好处是显而易见的，使用便捷，开发成本低，自己不需要维护IP地址信息库。坏处也很明显，受制于人，服务说停就停。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自己编程，查询本地的IP地址信息库&lt;/p&gt;

&lt;p&gt;这种方式完全自主，使用起来没有任何限制。不过需要自己维护IP地址信息库，起码每年更新几次还是有必要的。国内最常用的IP地址信息库就是纯真IP地址信息库了。&lt;/p&gt;

&lt;p&gt;下载网站1：&lt;a href=&#34;http://www.cz88.net&#34;&gt;http://www.cz88.net&lt;/a&gt; 下载网站2：&lt;a href=&#34;http://www.crsky.com/soft/2611.html&#34;&gt;http://www.crsky.com/soft/2611.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，虽然php可以直接访问qqwry.dat文件进行查询，但是如果查询比较频繁的话，建议还是采用使用C编写成的qqwry.so这样的php扩展模块效率更高。在Linux下很容易进行安装。具体可以参照&lt;a href=&#34;http://www.open-open.com/lib/view/open1334717267889.html&#34;&gt;http://www.open-open.com/lib/view/open1334717267889.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;还有一种做法是使用数据库维护一个IP地址信息库。难点主要是如果拿到一份正确的数据库（去淘宝上买？哪里有官方的？）以及从哪里获取IP信息的更新。&lt;/p&gt;

&lt;p&gt;对于小规模应用，最便捷的做法显然是调用新浪，淘宝等现成的接口。大不了把几个接口都写到程序里，一个接口失败了，就尝试调用另外一个接口，这样应该能大大增强程序的可靠性。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP获取客户端真实IP地址的方法</title>
      <link>http://www.racksam.com/2013/08/10/getting-client-real-ip-address-in-php-request/</link>
      <pubDate>Sat, 10 Aug 2013 10:06:57 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/08/10/getting-client-real-ip-address-in-php-request/</guid>
      <description>考虑到用户的浏览器访问网站可能会使用代理，服务器端的php代码必须使用多种判断，才能获取用户的真实IP地址。 &amp;lt;?php function getClientIp(){ $onlineip=&#39;&#39;; if(getenv(&#39;HTTP_CLIENT_IP&#39;)&amp;amp;&amp;amp;strcasecmp(getenv(&#39;HTTP_CLIENT_IP&#39;),&#39;unknown&#39;)){ $onlineip=getenv(&#39;HTTP_CLIENT_IP&#39;); }elseif(getenv(&#39;HTTP_X_FORWARDED_FOR&#39;)&amp;amp;&amp;amp;strcasecmp(getenv(&#39;HTTP_X_FORWARDED_FOR&#39;),&#39;unknown&#39;)){ $onlineip=getenv(&#39;HTTP_X_FORWARDED_FOR&#39;); }elseif(getenv(&#39;REMOTE_ADDR&#39;)&amp;amp;&amp;amp;strcasecmp(getenv(&#39;REMOTE_ADDR&#39;),&#39;unknown&#39;)){ $onlineip=getenv(&#39;REMOTE_ADDR&#39;); }elseif(isset($_SERVER[&#39;REMOTE_ADDR&#39;])&amp;amp;&amp;amp;$_SERVER[&#39;REMOTE_ADDR&#39;]&amp;amp;&amp;amp;strcasecmp($_SERVER[&#39;REMOTE_ADDR&#39;],&#39;unknown&#39;)){ $onlineip=$_SERVER[&#39;REMOTE_ADDR&#39;]; } return $onlineip; }</description>
    </item>
    
    <item>
      <title>php中如何判断一个IP地址是否属于某个网络地址段</title>
      <link>http://www.racksam.com/2013/08/09/good-php-script-to-judge-ip-range/</link>
      <pubDate>Fri, 09 Aug 2013 10:35:26 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/08/09/good-php-script-to-judge-ip-range/</guid>
      <description>这个问题困扰我很久了。很多人的做法是使用正则文字验证开头文字是否匹配。但是这种方式有很大的局限性，只能判断类似192.168.1.9是否属于</description>
    </item>
    
    <item>
      <title>PHP调用Linux Ping</title>
      <link>http://www.racksam.com/2013/08/06/using-ping-with-php/</link>
      <pubDate>Tue, 06 Aug 2013 10:06:57 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/08/06/using-ping-with-php/</guid>
      <description>PHP中实现网络ping的功能，可以直接调用操作系统的ping命令。例如在Linux下，可以这样实现： &amp;lt;?php // 参照ping命令的参数 exec(&amp;quot;ping -c 2 www.tudaxia.com&amp;quot;, $output, $result);</description>
    </item>
    
    <item>
      <title>DNSPod API</title>
      <link>http://www.racksam.com/2013/08/03/dnspod-api-resource/</link>
      <pubDate>Sat, 03 Aug 2013 10:06:57 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/08/03/dnspod-api-resource/</guid>
      <description>发现dnspod.cn的API越来越丰富了，除了官方的API，第三方封装的各种语言的库函数也很丰富。灵活应用这些API，可以很方便的开发出来</description>
    </item>
    
    <item>
      <title>Whmcs 密码api</title>
      <link>http://www.racksam.com/2013/08/01/decode-password-with-whmcs-api/</link>
      <pubDate>Thu, 01 Aug 2013 10:06:57 +0000</pubDate>
      
      <guid>http://www.racksam.com/2013/08/01/decode-password-with-whmcs-api/</guid>
      <description>&lt;p&gt;Whmcs是一款优秀的主机在线销售系统。虽然是使用php开发的，但是由于是商业软件，它使用&lt;a href=&#34;http://www.ioncube.com/&#34;&gt;ioncube&lt;/a&gt;对所有的php代码进行了加密。这样一来就无法在原有的代码基础上直接进行二次开发。&lt;/p&gt;

&lt;p&gt;不过Whmcs开发人员为开发者预留了大量的API接口，可以很方便的进行功能扩展和定制&lt;a href=&#34;http://docs.whmcs.com/API&#34;&gt;http://docs.whmcs.com/API&lt;/a&gt;。这些接口可以通过两种方式进行调用。一种是php程序在whmcs目录内直接传递参数来调用localAPI函数，适宜于为whmcs开发各种模块或者hook；另外一种是通过web service方式，使用http接口来传递参数调用&lt;code&gt;http://yourdomain(host)/includes/api.php&lt;/code&gt;，这种方式适宜于不同系统之间的集成。如果使用web service接口，还有一个好处就是可以使用各种开发语言。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>